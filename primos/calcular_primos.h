/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALCULAR_PRIMOS_H_RPCGEN
#define _CALCULAR_PRIMOS_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct encontrados {
	int nPrimos;
	int vectorPrimos[5761456];
};
typedef struct encontrados encontrados;

struct contar_1_argument {
	int nip;
	int min;
	int max;
};
typedef struct contar_1_argument contar_1_argument;

struct buscar_1_argument {
	int nip;
	int min;
	int max;
};
typedef struct buscar_1_argument buscar_1_argument;

#define PRIMOS 11
#define UNO 1

#if defined(__STDC__) || defined(__cplusplus)
#define contar 1
extern  int * contar_1(int , int , int , CLIENT *);
extern  int * contar_1_svc(int , int , int , struct svc_req *);
#define buscar 2
extern  struct encontrados * buscar_1(int , int , int , CLIENT *);
extern  struct encontrados * buscar_1_svc(int , int , int , struct svc_req *);
extern int primos_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define contar 1
extern  int * contar_1();
extern  int * contar_1_svc();
#define buscar 2
extern  struct encontrados * buscar_1();
extern  struct encontrados * buscar_1_svc();
extern int primos_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_encontrados (XDR *, encontrados*);
extern  bool_t xdr_contar_1_argument (XDR *, contar_1_argument*);
extern  bool_t xdr_buscar_1_argument (XDR *, buscar_1_argument*);

#else /* K&R C */
extern bool_t xdr_encontrados ();
extern bool_t xdr_contar_1_argument ();
extern bool_t xdr_buscar_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALCULAR_PRIMOS_H_RPCGEN */
